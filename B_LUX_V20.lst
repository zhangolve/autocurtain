C51 COMPILER V8.02   B_LUX_V20                                                             06/21/2015 15:04:20 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE B_LUX_V20
OBJECT MODULE PLACED IN .\B_LUX_V20.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\51单片机STC B_LUX_V20\B_LUX_V20.c BROWSE DEBUG OBJECTEXTEND PRINT(.\B_LU
                    -X_V20.lst) OBJECT(.\B_LUX_V20.obj)

line level    source

   1          //***************************************
   2          // B_LUX_V20采集程序
   3          //****************************************
   4          #include  <math.h>    //Keil library  
   5          #include  <stdio.h>   //Keil library
   6          #include "B_LUX_V20.h"
   7          #include  <LCD1602.H>
   8          sbit      LCM_RS=P2^0;   //LCD1602命令端口              
   9          sbit      LCM_RW=P2^1;   //LCD1602命令端口              
  10          sbit      LCM_EN=P2^2;   //LCD1602命令端口 
  11          #define uchar unsigned char
  12          #define uint  unsigned int
  13          uint8    BUF_0[8];                       //接收数据缓存区       
  14          uint16   dis_data_0;                     //变量
  15          
  16          
  17           
  18          sbit  BEEP = P3^6;       //蜂鸣器
  19          sbit ZZ=P1^0;//控制端
  20          sbit FZ=P1^1;//控制端
  21          sbit Key_UP=P3^3;   //正转按键 对应实验板上的K5
  22          sbit Key_DOWN=P3^4;   //反转按键  对应实验板上的K6
  23          sbit Key_STOP=P3^5;//停止键      对应实验板上的K3
  24          unsigned char KeyV,TempKeyV;      
  25          
  26          /*---------------------------------------------------------------------
  27           功能描述: 延时纳秒 不同的工作环境,需要调整此函数
  28           参数说明: 无   
  29           函数返回: 无
  30           ---------------------------------------------------------------------*/
  31          void B_LUX_delay_nms(uint16 k)  
  32          {                                               
  33   1        uint16 i,j;                           
  34   1        for(i=0;i<k;i++)
  35   1        {                     
  36   2          for(j=0;j<6000;j++)                 
  37   2          {
  38   3            ;
  39   3          }
  40   2        }                                             
  41   1      }                                       
  42          
  43          /*---------------------------------------------------------------------
  44           功能描述: 延时5微秒  不同的工作环境,需要调整此函数
  45           参数说明: 无   
  46           函数返回: 无
  47           ---------------------------------------------------------------------*/
  48          void B_LUX_Delay5us()
  49          {
  50   1        uint8 n = 1;
  51   1        
  52   1        while (n--);
  53   1      }
  54          
C51 COMPILER V8.02   B_LUX_V20                                                             06/21/2015 15:04:20 PAGE 2   

  55          /*---------------------------------------------------------------------
  56           功能描述: 延时5毫秒  不同的工作环境,需要调整此函数
  57           参数说明: 无   
  58           函数返回: 无
  59           ---------------------------------------------------------------------*/
  60          void B_LUX_Delay5ms()
  61          {
  62   1        uint16 n = 60000;
  63   1        
  64   1        while (n--);
  65   1      }
  66          
  67          /*---------------------------------------------------------------------
  68           功能描述: 起始信号
  69           参数说明: 无   
  70           函数返回: 无
  71           ---------------------------------------------------------------------*/
  72          void B_LUX_Start()
  73          {
  74   1        B_LUX_SDA0_H;                    //拉高数据线
  75   1        B_LUX_SCL0_H;                    //拉高时钟线
  76   1        B_LUX_Delay5us();                 //延时
  77   1        B_LUX_SDA0_L;                    //产生下降沿
  78   1        B_LUX_Delay5us();                 //延时
  79   1        B_LUX_SCL0_L;                    //拉低时钟线
  80   1      }
  81          
  82          /*---------------------------------------------------------------------
  83           功能描述: 停止信号
  84           参数说明: 无   
  85           函数返回: 无
  86           ---------------------------------------------------------------------*/
  87          void B_LUX_Stop()
  88          {
  89   1        B_LUX_SDA0_L;                    //拉低数据线
  90   1        B_LUX_SCL0_H;                    //拉高时钟线
  91   1        B_LUX_Delay5us();                 //延时
  92   1        B_LUX_SDA0_H;                    //产生上升沿
  93   1        B_LUX_Delay5us();                 //延时
  94   1        B_LUX_SCL0_L;
  95   1        B_LUX_Delay5us();
  96   1      }
  97          
  98          /*---------------------------------------------------------------------
  99           功能描述: 发送应答信号
 100           参数说明: ack - 应答信号(0:ACK 1:NAK)
 101           函数返回: 无
 102           ---------------------------------------------------------------------*/
 103          void B_LUX_SendACK(uint8 ack)
 104          {
 105   1        if (ack&0x01) B_LUX_SDA0_H;            //写应答信号
 106   1        else  B_LUX_SDA0_L;
 107   1        
 108   1        B_LUX_SCL0_H;                    //拉高时钟线
 109   1        B_LUX_Delay5us();                 //延时
 110   1        B_LUX_SCL0_L;                    //拉低时钟线
 111   1        B_LUX_SDA0_H;
 112   1        B_LUX_Delay5us();                 //延时
 113   1      }
 114          
 115          /*---------------------------------------------------------------------
 116           功能描述: 接收应答信号
C51 COMPILER V8.02   B_LUX_V20                                                             06/21/2015 15:04:20 PAGE 3   

 117           参数说明: 无
 118           函数返回: 返回应答信号
 119           ---------------------------------------------------------------------*/
 120          uint8 B_LUX_RecvACK()
 121          {
 122   1        uint8 CY = 0x00;
 123   1        B_LUX_SDA0_H;
 124   1        
 125   1        B_LUX_SDA0_I;
 126   1        
 127   1        B_LUX_SCL0_H;              //拉高时钟线
 128   1        B_LUX_Delay5us();                 //延时
 129   1        
 130   1        
 131   1        CY |= B_LUX_SDA0_DAT;    //读应答信号
 132   1        
 133   1        B_LUX_Delay5us();                 //延时
 134   1        
 135   1        B_LUX_SCL0_L;              //拉低时钟线
 136   1        
 137   1        B_LUX_SDA0_O;
 138   1        
 139   1        return CY;
 140   1      }
 141          
 142          /*---------------------------------------------------------------------
 143           功能描述: 向IIC总线发送一个字节数据
 144           参数说明: dat - 写字节
 145           函数返回: 无
 146           ---------------------------------------------------------------------*/
 147          void B_LUX_SendByte(uint8 dat)
 148          {
 149   1        uint8 i;
 150   1        
 151   1        for (i=0; i<8; i++)                           //8位计数器
 152   1        {
 153   2          if (dat&0x80)       B_LUX_SDA0_H;
 154   2          else        B_LUX_SDA0_L;              //送数据口
 155   2          
 156   2          B_LUX_Delay5us();                                   //延时
 157   2          B_LUX_SCL0_H;                               //拉高时钟线
 158   2          B_LUX_Delay5us();                                   //延时
 159   2          B_LUX_SCL0_L;                               //拉低时钟线
 160   2          B_LUX_Delay5us();                                   //延时
 161   2          dat <<= 1;                                  //移出数据的最高位
 162   2        }
 163   1        
 164   1        B_LUX_RecvACK();
 165   1      }
 166          
 167          /*---------------------------------------------------------------------
 168           功能描述: 从IIC总线接收一个字节数据
 169           参数说明: 无
 170           函数返回: 接收字节
 171           ---------------------------------------------------------------------*/
 172          uint8 B_LUX_RecvByte()
 173          {
 174   1        uint8 i;
 175   1        uint8 dat = 0;
 176   1        B_LUX_SDA0_I;
 177   1        
 178   1        B_LUX_SDA0_H;                  //使能内部上拉,准备读取数据,
C51 COMPILER V8.02   B_LUX_V20                                                             06/21/2015 15:04:20 PAGE 4   

 179   1        for (i=0; i<8; i++)           //8位计数器
 180   1        {
 181   2          B_LUX_SCL0_H;              //拉高时钟线
 182   2          B_LUX_Delay5us();                   //延时
 183   2          dat |= B_LUX_SDA0_DAT;     //读数据               
 184   2          B_LUX_SCL0_L;              //拉低时钟线
 185   2          B_LUX_Delay5us();                   //延时
 186   2          
 187   2          dat <<= 1;  
 188   2        }
 189   1        B_LUX_SDA0_O;
 190   1        
 191   1        return dat;
 192   1      }
 193          
 194          /*---------------------------------------------------------------------
 195           功能描述: 写BH1750
 196           参数说明: REG_Address - 寄存器地址
 197           函数返回: 无
 198           ---------------------------------------------------------------------*/
 199          void B_LUX_Single_Write(uint8 REG_Address)
 200          {
 201   1        B_LUX_Start();                  //起始信号
 202   1        B_LUX_SendByte(B_LUX_SlaveAddress);   //发送设备地址+写信号
 203   1        B_LUX_SendByte(REG_Address);    //内部寄存器地址，请参考中文pdf22页 
 204   1        //  BH1750_SendByte(REG_data);       //内部寄存器数据，请参考中文pdf22页 
 205   1        B_LUX_Stop();                   //发送停止信号
 206   1      }
 207          
 208          /*---------------------------------------------------------------------
 209           功能描述: 连续读出BH1750内部数据
 210           参数说明: 无
 211           函数返回: 无
 212           ---------------------------------------------------------------------*/
 213          void B_LUX_Multiple_read(void)
 214          {   
 215   1        uint8 i;      
 216   1        B_LUX_Start();                          //起始信号
 217   1        B_LUX_SendByte(B_LUX_SlaveAddress+1);         //发送设备地址+读信号
 218   1        
 219   1        for (i=0; i<3; i++)                        //连续读取6个地址数据，存储中BUF
 220   1        {
 221   2          BUF_0[i] = B_LUX_RecvByte();          //BUF[0]存储0x32地址中的数据
 222   2          if (i == 3)
 223   2          {
 224   3            
 225   3            B_LUX_SendACK(1);                   //最后一个数据需要回NOACK
 226   3          }
 227   2          else
 228   2          {           
 229   3            B_LUX_SendACK(0);                   //回应ACK
 230   3          }
 231   2        }
 232   1        
 233   1        B_LUX_Stop();                           //停止信号
 234   1        B_LUX_Delay5ms();
 235   1      }
 236          
 237          /*---------------------------------------------------------------------
 238           功能描述: 初始化光照传感器
 239           参数说明: 无
 240           函数返回: 无
C51 COMPILER V8.02   B_LUX_V20                                                             06/21/2015 15:04:20 PAGE 5   

 241           ---------------------------------------------------------------------*/
 242          void B_LUX_Init()
 243          {
 244   1        
 245   1        //P1SEL &= ~(0x48);
 246   1        
 247   1        B_LUX_SCL0_O;
 248   1        B_LUX_SDA0_O;
 249   1        
 250   1        B_LUX_delay_nms(100);     //延时100ms
 251   1        
 252   1        B_LUX_Single_Write(0x01); 
 253   1        
 254   1      }
 255          
 256          /*---------------------------------------------------------------------
 257           功能描述: 光照读取函数
 258           参数说明: 无
 259           函数返回: 返回光照值
 260           ---------------------------------------------------------------------*/
 261          uint32 B_LUX_GetLux()
 262          {  
 263   1        fint32 temp;
 264   1        B_LUX_Single_Write(0x01);   // power on
 265   1        B_LUX_Single_Write(0x10);   // H- resolution mode 
 266   1        
 267   1        B_LUX_delay_nms(180);       //延时180ms
 268   1        
 269   1        B_LUX_Multiple_read();      //连续读出数据，存储在BUF中
 270   1        
 271   1        B_LUX_Single_Write(0x00);   // power off
 272   1        
 273   1        dis_data_0=BUF_0[0];
 274   1        dis_data_0=(dis_data_0<<8)+BUF_0[1];//合成数据，即光照数据
 275   1        
 276   1        temp=(float)dis_data_0/1.2;
 277   1        return (uint32)(temp*1.4);
 278   1      }
 279          
 280          
 281          void delay1ms()
 282          {
 283   1         unsigned char i,j;   
 284   1               for(i=0;i<10;i++)
 285   1                for(j=0;j<33;j++)
 286   1                 ;             
 287   1      }
 288          
 289          
 290          
 291          
 292          
 293            void delay(unsigned char n)
 294           {
 295   1         unsigned char i;
 296   1              for(i=0;i<n;i++)
 297   1                 delay1ms();
 298   1       }
 299          
 300          
 301          void delayB(uchar x)    //x*0.14MS
 302           {
C51 COMPILER V8.02   B_LUX_V20                                                             06/21/2015 15:04:20 PAGE 6   

 303   1         uchar i;
 304   1         while(x--)
 305   1         {
 306   2           for (i=0; i<13; i++)
 307   2           { }
 308   2         }
 309   1       }
 310          
 311          void beep()
 312           {
 313   1         uchar i;
 314   1         for (i=0;i<100;i++)
 315   1          { 
 316   2           delayB(4);
 317   2           BEEP=!BEEP;                 //BEEP取反
 318   2          } 
 319   1           BEEP=1;                    //关闭蜂鸣器
 320   1       }
 321          
 322          void key(uint32 x)
 323          {        
 324   1               FZ=1;
 325   1           ZZ=1;
 326   1              // if(Key_UP)   {
 327   1               if(x>200)      Key_UP=0;
 328   1               
 329   1               else       Key_UP=1;
 330   1               //}
 331   1      
 332   1      
 333   1      
 334   1               //if(Key_DOWN)
 335   1              // {
 336   1               if(x<50)       Key_DOWN=0;
 337   1               else       Key_DOWN=1;
 338   1                                        
 339   1              //                        }
 340   1      
 341   1               if (!Key_UP)
 342   1          KeyV = 1;
 343   1        if (!Key_DOWN)
 344   1          KeyV = 2;
 345   1                  if (!Key_STOP)
 346   1          KeyV = 3;
 347   1         if (KeyV!= 0)     
 348   1          {
 349   2            delay(1);   
 350   2            if (!Key_UP)
 351   2              TempKeyV = 1;   
 352   2            if (!Key_DOWN)
 353   2              TempKeyV = 2;   
 354   2            if (!Key_STOP)
 355   2              TempKeyV = 3;
 356   2                       if (KeyV == TempKeyV)  
 357   2                 {
 358   3                       
 359   3                         if (KeyV == 1){
 360   4                          beep();
 361   4                      ZZ=1;
 362   4                      FZ=0;
 363   4      }
 364   3      if(KeyV==2){
C51 COMPILER V8.02   B_LUX_V20                                                             06/21/2015 15:04:20 PAGE 7   

 365   4       beep();
 366   4                      ZZ=0;
 367   4                      FZ=1;
 368   4              }
 369   3              if(KeyV==3){
 370   4               beep();
 371   4                      ZZ=0;
 372   4                      FZ=0;
 373   4              }                                       
 374   3              }  
 375   2      } 
 376   1      KeyV=0;
 377   1      TempKeyV=0; 
 378   1      
 379   1      
 380   1        }
 381                  
 382          
 383          
 384          
 385          
 386          
 387          
 388          
 389          
 390          
 391          
 392          
 393          
 394          
 395          
 396          
 397          
 398          
 399          
 400          
 401          
 402          
 403          
 404          
 405          
 406          
 407          main()
 408          
 409          {
 410   1              unsigned char code digit[ ]={"0123456789"};
 411   1              unsigned char D1,D2,D3,D4; 
 412   1              uint32 x;
 413   1              
 414   1              while(1)
 415   1              {
 416   2              B_LUX_Start();
 417   2              B_LUX_Init();
 418   2              B_LUX_GetLux();
 419   2              
 420   2              x= B_LUX_GetLux();
 421   2              D1=x%10;              //计算个位数字
 422   2              D2=(x%100)/10;        //计算十位数字
 423   2              D3= (x%1000)/100;        //计算百位数字
 424   2              D4= x/1000      ;
 425   2                                      
 426   2      
C51 COMPILER V8.02   B_LUX_V20                                                             06/21/2015 15:04:20 PAGE 8   

 427   2              LCD_Initial();
 428   2               
 429   2              GotoXY(0,0);
 430   2              LCD_Write(1,digit[D4]);
 431   2              LCD_Write(1,digit[D3]);
 432   2              LCD_Write(1,digit[D2]);
 433   2              LCD_Write(1,digit[D1]);
 434   2              Print("   LUX");
 435   2              key(x); 
 436   2               
 437   2       }       
 438   1      
 439   1      }
 440          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    941    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
